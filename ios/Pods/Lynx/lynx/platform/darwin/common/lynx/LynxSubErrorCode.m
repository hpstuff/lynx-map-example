// !!!!!! DO NOT MODIFY THIS FILE !!!!!!
// This file is auto-generated by error_code.yaml
// clang-format off
#import "LynxSubErrorCode.h"

#pragma mark - Section: Success
/**
 * Section: Success
 * CodePrefix: 0
 * Description: Success section
 */

// Behavior: Default
// Description: 
// BehaviorCode: 0

// 
NSInteger const ECLynxSuccess = 0;

#pragma mark - Section: AppBundle
/**
 * Section: AppBundle
 * CodePrefix: 1
 * Description: App bundle related errors
 */

// Behavior: Load
// Description: Error occurred while loading app bundle
// BehaviorCode: 102

// Failed to render app bundle.
NSInteger const ECLynxAppBundleLoadRenderFailed = 10201;
// `loadTemplate` while LynxEnv has not been initialized
NSInteger const ECLynxAppBundleLoadEnvNotReady = 10202;
// Failed to fetch app bundle by provider.
NSInteger const ECLynxAppBundleLoadBadResponse = 10203;
// Failed to parse app bundle.
NSInteger const ECLynxAppBundleLoadParseFailed = 10204;
// A bad TemplateBundle is provided.
NSInteger const ECLynxAppBundleLoadBadBundle = 10205;
// Exception occurred while rendering app bundle
NSInteger const ECLynxAppBundleLoadException = 10299;


// Behavior: Reload
// Description: Error occurred while reloading app bundle
// BehaviorCode: 105

// `reloadTemplate` before `loadTemplate`
NSInteger const ECLynxAppBundleReloadEarlyReload = 10501;


// Behavior: Verify
// Description: Error occurred while verifying app bundle
// BehaviorCode: 107

// Signature check failed for app bundle binary
NSInteger const ECLynxAppBundleVerifyInvalidSignature = 10701;

#pragma mark - Section: BTS
/**
 * Section: BTS
 * CodePrefix: 2
 * Description: Background thread script related errors
 */

// Behavior: RuntimeError
// Description: Error occurred while executing background thread script
// BehaviorCode: 201

// Runtime error for an unspecified reason
NSInteger const ECLynxBTSRuntimeError = 20100;
// The script has syntax errors or other runtime errors.
NSInteger const ECLynxBTSRuntimeErrorScriptError = 20101;
// The bytecode script has syntax errors or other runtime errors.
NSInteger const ECLynxBTSRuntimeErrorBytecodeScriptError = 20102;
// JavaScript binding API call errors.
NSInteger const ECLynxBTSRuntimeErrorBindingsError = 20103;


// Behavior: PlatformCallJSFunction
// Description: Error occurred while calling JS function from platform.
// BehaviorCode: 202

// Calling JS function too frequently. This may cause OOM issues.
NSInteger const ECLynxBTSPlatformCallJSFunctionTooFrequency = 20201;

#pragma mark - Section: Resource
/**
 * Section: Resource
 * CodePrefix: 3
 * Description: Resource related errors
 */

// Behavior: Image
// Description: Error occurred while loading image resource
// BehaviorCode: 301

// The image bitmap size is too large relative to the UI. 
NSInteger const ECLynxResourceImageBigImage = 30101;
// Error occurred while decoding image
NSInteger const ECLynxResourceImagePicSource = 30102;
// Error from user actions or the network conditions.
NSInteger const ECLynxResourceImageFromUserOrDesign = 30103;
// Network or other issues
NSInteger const ECLynxResourceImageFromNetworkOrOthers = 30196;
// Exception occurred while loading image
NSInteger const ECLynxResourceImageException = 30199;


// Behavior: Font
// Description: Error occurred while loading font resource
// BehaviorCode: 302

// Failed to process font resource.
NSInteger const ECLynxResourceFont = 30200;
// Font src format error
NSInteger const ECLynxResourceFontSrcFormatError = 30201;
// Failed to load font resource.
NSInteger const ECLynxResourceFontResourceLoadError = 30202;
// Failed to parse base64 resource.
NSInteger const ECLynxResourceFontBase64ParsingError = 30203;
// Font file format is not supported
NSInteger const ECLynxResourceFontFileFormatNotSupported = 30204;
// Failed to register font.
NSInteger const ECLynxResourceFontRegisterFailed = 30205;


// Behavior: ExternalResource
// Description: Error occurred while loading external resource
// BehaviorCode: 303

// Lynx resource fetcher requests failed
NSInteger const ECLynxResourceExternalResourceRequestFailed = 30301;
// Failed to load local resource
NSInteger const ECLynxResourceExternalResourceLocalResourceLoadFail = 30302;


// Behavior: I18n
// Description: Error occurred while loading i18n resource
// BehaviorCode: 304

// i18n Resource Error
NSInteger const ECLynxResourceI18n = 30400;


// Behavior: Module
// Description: Error occurred while invoking LynxResourceModule
// BehaviorCode: 321

// Parameter type mismatch or incorrect number of parameters while calling the requestResourcePrefetch or cancelResourcePrefetch API.
NSInteger const ECLynxResourceModuleParamsError = 32101;
// Unable to access the image service because the app has not integrated LynxImageService.
NSInteger const ECLynxResourceModuleImgPrefetchHelperNotExist = 32102;
// Unable to access resources because the app has not integrated the resource service.
NSInteger const ECLynxResourceModuleResourceServiceNotExist = 32103;


// Behavior: Custom
// Description: Custom error for resource
// BehaviorCode: 398

// Unexpected custom error
NSInteger const ECLynxResourceCustom = 39800;


// Behavior: Exception
// Description: Exception occurred while loading resource
// BehaviorCode: 399

// Unexpect exception in loading resource
NSInteger const ECLynxResourceException = 39900;

#pragma mark - Section: DataFlow
/**
 * Section: DataFlow
 * CodePrefix: 4
 * Description: Data flow related errors
 */

// Behavior: Update
// Description: Error occurred while updating data
// BehaviorCode: 401

// Call built-in function as data processor.
NSInteger const ECLynxDataFlowUpdateInvalidProcessor = 40101;
// Invalid data type
NSInteger const ECLynxDataFlowUpdateInvalidType = 40102;
// Exception occurred while updating data
NSInteger const ECLynxDataFlowUpdateException = 40199;

#pragma mark - Section: Element
/**
 * Section: Element
 * CodePrefix: 5
 * Description: Error in element
 */

// Behavior: API
// Description: Error occurred while invoking Element API
// BehaviorCode: 501

// Fatal error in element API. Please find detailed information in the context.
NSInteger const ECLynxElementAPIFatal = 50101;
// Error in element API. Please find detailed information in the context.
NSInteger const ECLynxElementAPIError = 50102;


// Behavior: Update
// Description: Error occurred while updating element
// BehaviorCode: 502

// Element update error for an unspecified reason
NSInteger const ECLynxElementUpdateNodeIsNull = 50201;

#pragma mark - Section: Layout
/**
 * Section: Layout
 * CodePrefix: 6
 * Description: Error occurred during Layout
 */

// Behavior: Internal
// Description: Internal layout error
// BehaviorCode: 601

// Cannot find ShadowNode.
NSInteger const ECLynxLayoutInternal = 60100;


// Behavior: Perf
// Description: Performance issues related to layout
// BehaviorCode: 602

// Infinite Loop of layout is detected.
NSInteger const ECLynxLayoutPerfInfiniteLoop = 60201;


// Behavior: Update
// Description: Failed to update layout
// BehaviorCode: 603

// Can not find UI while updating layout
NSInteger const ECLynxLayoutUpdateUINotFound = 60301;


// Behavior: Platform
// Description: Invalid usage or exceptions on ShadowNode
// BehaviorCode: 604

// ShadowNode is accessed after destroyed
NSInteger const ECLynxLayoutPlatformNodeNull = 60401;

#pragma mark - Section: NativeModules
/**
 * Section: NativeModules
 * CodePrefix: 9
 * Description: Error occurred while calling NativeModules
 */

// Behavior: Common
// Description: Common errors for invoking native modules
// BehaviorCode: 901

// Native module not found
NSInteger const ECLynxNativeModulesCommonModuleNotFound = 90101;
// Native module method not found
NSInteger const ECLynxNativeModulesCommonFunctionNotFound = 90102;
// Parameter count mismatch in native module method invocation
NSInteger const ECLynxNativeModulesCommonWrongParamNum = 90103;
// Parameter type mismatch in native module method invocation
NSInteger const ECLynxNativeModulesCommonWrongParamType = 90104;
// Does not have permission to call the method.
NSInteger const ECLynxNativeModulesCommonAuthorizationError = 90105;
// Does not have permission to call the method.
NSInteger const ECLynxNativeModulesCommonSystemAuthorizationError = 90106;
// The value returned by module method is invalid
NSInteger const ECLynxNativeModulesCommonReturnError = 90107;


// Behavior: Network
// Description: Error occurred while calling network module
// BehaviorCode: 908

// The http response body is not a valid JSON
NSInteger const ECLynxNativeModulesNetworkBadResponse = 90801;


// Behavior: CustomError
// Description: Error occurred in custom native modules
// BehaviorCode: 998

// Custom error reported from native module.
NSInteger const ECLynxNativeModulesCustomError = 99800;


// Behavior: Exception
// Description: Exception occurred while invoking the native module.
// BehaviorCode: 999

// Internal exception in native module method execution.
NSInteger const ECLynxNativeModulesException = 99900;

#pragma mark - Section: Event
/**
 * Section: Event
 * CodePrefix: 10
 * Description: Error occurred in the event handling process
 */

// Behavior: Exception
// Description: Exception occurred while handling event
// BehaviorCode: 1099

// An exception occurred during LynxView dispatchTouchEvent
NSInteger const ECLynxEventException = 109900;

#pragma mark - Section: MTS
/**
 * Section: MTS
 * CodePrefix: 11
 * Description: Main thread script related errors
 */

// Behavior: RuntimeError
// Description: Error occurred while executing Main thread script
// BehaviorCode: 1101

// Main thread script error for an unspecified reason
NSInteger const ECLynxMTSRuntimeError = 110100;


// Behavior: RendererFunction
// Description: Error occurred while executing renderer function
// BehaviorCode: 1111

// Fatal error during rendering. Please find detailed information in the context.
NSInteger const ECLynxMTSRendererFunctionFatal = 111101;
// Fatal error during rendering. Please find detailed information in the context.
NSInteger const ECLynxMTSRendererFunctionError = 111102;

#pragma mark - Section: Thread
/**
 * Section: Thread
 * CodePrefix: 12
 * Description: Thread related errors
 */

// Behavior: WrongThread
// Description: Running on the wrong thread
// BehaviorCode: 1202

// Please ensure that `destroy` is called on UI thread.
NSInteger const ECLynxThreadWrongThreadDestroyError = 120201;
// Please ensure that `SyncFlush` is called on UI thread
NSInteger const ECLynxThreadWrongThreadSyncFlushError = 120202;

#pragma mark - Section: CSS
/**
 * Section: CSS
 * CodePrefix: 13
 * Description: CSS related errors
 */

// Behavior: Default
// Description: Generic CSS error
// BehaviorCode: 1301

// CSS error for an unspecified reason
NSInteger const ECLynxCSS = 130100;
// Unknown CSS property id.
NSInteger const ECLynxCSSUnknownProperty = 130101;
// Unsupported CSS value.
NSInteger const ECLynxCSSUnsupportedValue = 130102;


// Behavior: ComputedCSSValue
// Description: Error while manipulating ComputedCSSValue
// BehaviorCode: 1302

// Error occurred while setting value to ComputedCSSValue
NSInteger const ECLynxCSSComputedCSSValueUnknownSetter = 130201;
// Error occurred while getting value from ComputedCSSValue
NSInteger const ECLynxCSSComputedCSSValueUnknownGetter = 130202;
// Property is not inheritable.
NSInteger const ECLynxCSSComputedCSSValueUnsupportedInheritance = 130203;


// Behavior: Parser
// Description: Error occurred while parsing CSS
// BehaviorCode: 1303

// Generic error while parsing CSS value. Value is not acceptable for the property.
NSInteger const ECLynxCSSParser = 130300;

#pragma mark - Section: SSR
/**
 * Section: SSR
 * CodePrefix: 14
 * Description: Error for rendering page whose dom is constructed on server side
 */

// Behavior: Decode
// Description: Failed to decode SSR data
// BehaviorCode: 1401

// Ssr data corrupted or SSR is not implemented on client side.
NSInteger const ECLynxSSRDecode = 140100;
// Load SSR data with a higher API version than the version the sdk is supported
NSInteger const ECLynxSSRDecodeApiVersionNotSupported = 140101;
// Script execution failed
NSInteger const ECLynxSSRDecodeScript = 140102;


// Behavior: Load
// Description: Error occurred while loading SSR Data
// BehaviorCode: 1402

// Load SSR data before the native library of Lynx is initialized
NSInteger const ECLynxSSRLoadUninitialized = 140201;


// Behavior: Hydrate
// Description: Errors encountered while hydrating.
// BehaviorCode: 1404

// The dom structure after hydration deviates from the SSR result. may be caused by that different injected data or app bundles are used for SSR and hydrate.
NSInteger const ECLynxSSRHydrateDomDeviateFromSsrResult = 140401;

#pragma mark - Section: LazyBundle
/**
 * Section: LazyBundle
 * CodePrefix: 16
 * Description: Lazy bundle related errors
 */

// Behavior: Load
// Description: Failed to load a lazy bundle.
// BehaviorCode: 1601

// Lazy bundle request returned with bad response
NSInteger const ECLynxLazyBundleLoadBadResponse = 160101;
// The binary data of lazy bundle is empty.
NSInteger const ECLynxLazyBundleLoadEmptyFile = 160102;
// Failed to decode lazy bundle binary data
NSInteger const ECLynxLazyBundleLoadDecodeFailed = 160103;
// A bad lazy bundle is provided
NSInteger const ECLynxLazyBundleLoadBadBundle = 160104;

#pragma mark - Section: Worklet
/**
 * Section: Worklet
 * CodePrefix: 19
 * Description: Worklet related errors
 */

// Behavior: MTSCallException
// Description: Error for main thread script call exception in worklet
// BehaviorCode: 1901

// Please check the worklet function is callable, and the worklet file is imported correctly
NSInteger const ECLynxWorkletMTSCallException = 190100;


// Behavior: RafCallException
// Description: Error for requestAnimationFrame call exception
// BehaviorCode: 1902

// Error for calling requestAnimationFrame
NSInteger const ECLynxWorkletRafCallException = 190200;


// Behavior: ModuleException
// Description: Error for worklet module exception
// BehaviorCode: 1903

// Can not find worklet module
NSInteger const ECLynxWorkletModuleException = 190300;

#pragma mark - Section: MTSBridge
/**
 * Section: MTSBridge
 * CodePrefix: 20
 * Description: Error occurred while calling MTSBridge
 */

// Behavior: Module
// Description: Error occurred while calling MTSBridge module
// BehaviorCode: 2001

// Invoke function with wrong parameter
NSInteger const ECLynxMTSBridgeModuleWrongParam = 200101;

#pragma mark - Section: Component
/**
 * Section: Component
 * CodePrefix: 22
 * Description: Error from components
 */

// Behavior: API
// Description: Error occurred while invoking component API
// BehaviorCode: 2201

// A deprecated component API is invoked
NSInteger const ECLynxComponentAPIDeprecated = 220101;


// Behavior: List
// Description: Error from List component
// BehaviorCode: 2202

// Error for illegal list item-key
NSInteger const ECLynxComponentListIllegalItemKey = 220201;
// List has duplicated cell in cache
NSInteger const ECLynxComponentListDuplicatedCell = 220202;
// List cell not found in cache
NSInteger const ECLynxComponentListCellNotFound = 220203;
// List does not support changing orientation dynamically
NSInteger const ECLynxComponentListDynamicChangeOrientation = 220204;
// There is an invalid parameter set in some props
NSInteger const ECLynxComponentListInvalidPropsArg = 220205;
// Child component of list does not exist
NSInteger const ECLynxComponentListChildComponentNotExist = 220206;
// Multi thread strategy can not be used by default.
NSInteger const ECLynxComponentListUnsupportedThreadStrategy = 220207;
// Error for duplicate list item-key.
NSInteger const ECLynxComponentListDuplicateItemKey = 220208;


// Behavior: Image
// Description: Error from Image component
// BehaviorCode: 2203

// Failed to apply blur-radius on \<image\> element, meaning that the effect will not be visible on this platform.
NSInteger const ECLynxComponentImageUnsupportedProp = 220301;


// Behavior: Custom
// Description: Custom error of components
// BehaviorCode: 2298

// An error occurs in an customized element.
NSInteger const ECLynxComponentCustom = 229800;

#pragma mark - Section: Exception
/**
 * Section: Exception
 * CodePrefix: 99
 * Description: Exceptions that is difficult to classify
 */

// Behavior: Platform
// Description: Platform exceptions
// BehaviorCode: 9901

// Platform exceptions for an unspecified reason
NSInteger const ECLynxExceptionPlatform = 990100;


// Behavior: JNI
// Description: Exceptions encountered while calling Java native interface
// BehaviorCode: 9902

// JNI exceptions for an unspecified reason
NSInteger const ECLynxExceptionJNI = 990200;


@implementation LynxSubErrorCodeMetaData

- (instancetype)initWithLevel:(ELynxLevel)level fixSuggestion:(NSString*)fixSuggestion consumer:(NSArray*)consumer {
	self = [super init];
	if (self) {
		_level = level;
		_fixSuggestion = fixSuggestion;
		_consumer = consumer;
	}
	return self;
}

@end

@implementation LynxSubErrorCodeUtils

+ (LynxSubErrorCodeMetaData*)getMetaData:(NSInteger)subCode {
	switch (subCode) {
		case ECLynxSuccess:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxAppBundleLoadRenderFailed:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Should not call `loadTemplate` while the rendering pipeline of app bundle has not finished" consumer:@[]];
		case ECLynxAppBundleLoadEnvNotReady:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please call the initialization method of LynxEnv before loadTemplate." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxAppBundleLoadBadResponse:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please check if the app bundle is available" consumer:@[]];
		case ECLynxAppBundleLoadParseFailed:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please check that 1. the provided bundle is an app bundle, 2. the engine version of the bundle is compatible with that of Lynx engine, 3. the bundle file is not broken." consumer:@[]];
		case ECLynxAppBundleLoadBadBundle:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please check the error message of the bundle." consumer:@[]];
		case ECLynxAppBundleLoadException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"" consumer:@[]];
		case ECLynxAppBundleReloadEarlyReload:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please `loadTemplate` before `reloadTemplate`" consumer:@[@(ELynxConsumerClient)]];
		case ECLynxAppBundleVerifyInvalidSignature:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please check if the app bundle has been signed correctly" consumer:@[]];
		case ECLynxBTSRuntimeError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelUndecided fixSuggestion:@"" consumer:@[]];
		case ECLynxBTSRuntimeErrorScriptError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please check the error message and fix the script." consumer:@[]];
		case ECLynxBTSRuntimeErrorBytecodeScriptError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"Please check the error message and fix the script." consumer:@[]];
		case ECLynxBTSRuntimeErrorBindingsError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check the error message and fix binding API call." consumer:@[]];
		case ECLynxBTSPlatformCallJSFunctionTooFrequency:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelWarn fixSuggestion:@"Please throttle related calls." consumer:@[]];
		case ECLynxResourceImageBigImage:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please resize the image to appropriate dimensions or enable downsampling." consumer:@[]];
		case ECLynxResourceImagePicSource:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Possibly due to an unsupported image format or a corrupted file. Please verify the integrity of the image file." consumer:@[]];
		case ECLynxResourceImageFromUserOrDesign:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"In most cases, the issue arises from a canceled image request or an unavailable network connection." consumer:@[]];
		case ECLynxResourceImageFromNetworkOrOthers:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please investigate the corresponding image download workflow for potential issues." consumer:@[]];
		case ECLynxResourceImageException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"An unidentified exception occurred that cannot be attributed to a specific cause. Please investigate further based on the available details." consumer:@[]];
		case ECLynxResourceFont:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxResourceFontSrcFormatError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check the font-face format." consumer:@[]];
		case ECLynxResourceFontResourceLoadError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether font resource is available." consumer:@[]];
		case ECLynxResourceFontBase64ParsingError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether the base64 resource is available." consumer:@[]];
		case ECLynxResourceFontFileFormatNotSupported:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please use a font file in ttf or otf format." consumer:@[]];
		case ECLynxResourceFontRegisterFailed:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelUndecided fixSuggestion:@"If the font is displayed correctly, there is no need to deal with it." consumer:@[]];
		case ECLynxResourceExternalResourceRequestFailed:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether the url of the external resource is available" consumer:@[]];
		case ECLynxResourceExternalResourceLocalResourceLoadFail:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether the local external resource is available" consumer:@[]];
		case ECLynxResourceI18n:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxResourceModuleParamsError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please refer to the parameter descriptions of this API in documentation and check the parameters used in the call." consumer:@[@(ELynxConsumerFrontEnd)]];
		case ECLynxResourceModuleImgPrefetchHelperNotExist:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please refer to the official documentation to integrate LynxImageService into your app." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxResourceModuleResourceServiceNotExist:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please refer to the official documentation to implement the ILynxResourceService and integrate it into your app." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxResourceCustom:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This is unexpected. Please file an issue to Lynx to help address it." consumer:@[]];
		case ECLynxResourceException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This is unexpected. Please file an issue to Lynx to help address it." consumer:@[]];
		case ECLynxDataFlowUpdateInvalidProcessor:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Should not call `getDerivedStateFromProps`, `getDerivedStateFromError`, `shouldComponentUpdate` as data processor." consumer:@[]];
		case ECLynxDataFlowUpdateInvalidType:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Target string data should be enabled to be parsed into a table." consumer:@[]];
		case ECLynxDataFlowUpdateException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxElementAPIFatal:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"" consumer:@[]];
		case ECLynxElementAPIError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxElementUpdateNodeIsNull:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"" consumer:@[]];
		case ECLynxLayoutInternal:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Lynx internal error. Please check whether the creating of corresponding ShadowNode failed" consumer:@[]];
		case ECLynxLayoutPerfInfiniteLoop:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Infinite loop of layout happens. It usually happens when the front-end decides the content size based on the viewport size, while the client is deciding the viewport size based on the content size." consumer:@[@(ELynxConsumerFrontEnd)]];
		case ECLynxLayoutUpdateUINotFound:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This is an internal error of Lynx. LynxUI has not been created or the creation failed while updating." consumer:@[]];
		case ECLynxLayoutPlatformNodeNull:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This is an internal error of Lynx, which usually occurs when multiple threads access ShadowNode at the same time." consumer:@[]];
		case ECLynxNativeModulesCommonModuleNotFound:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please verify that the invoked native module name matches the registered name and confirm module registration status." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxNativeModulesCommonFunctionNotFound:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please verify proper method registration using platform-specific annotations on Android or static method declarations on iOS (For details, refer to the native module documentation). Additionally, ensure that the invoked method name exactly matches the registered name in the native module implementation." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxNativeModulesCommonWrongParamNum:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please ensure that the number of parameters passed to the native method exactly matches the declared parameters in the native module implementation." consumer:@[@(ELynxConsumerFrontEnd)]];
		case ECLynxNativeModulesCommonWrongParamType:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please verify that the parameter types in the method call exactly match the native module implementation. Ensure type compatibility across all parameters and validate the parameter order corresponds to the native method signature. You can check the native module documentation for expected data types." consumer:@[@(ELynxConsumerFrontEnd)]];
		case ECLynxNativeModulesCommonAuthorizationError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please file an issue to Lynx to help address it." consumer:@[]];
		case ECLynxNativeModulesCommonSystemAuthorizationError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please file an issue to Lynx to help address it." consumer:@[]];
		case ECLynxNativeModulesCommonReturnError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please file an issue to Lynx to help address it." consumer:@[]];
		case ECLynxNativeModulesNetworkBadResponse:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Check if the server's response body is correct; Check if client unexpectedly consumes http response body using network request interceptor; You can use request's url and log id to track down the problem." consumer:@[@(ELynxConsumerFrontEnd)]];
		case ECLynxNativeModulesCustomError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This error is explicitly defined by the native module implementation. Please refer to the module error handling guide or contact the module maintainer with complete error context." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxNativeModulesException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This error indicates an unhandled runtime exception within the native module implementation. Please refer to the module error handling guide or contact the module maintainer with complete error context." consumer:@[@(ELynxConsumerClient)]];
		case ECLynxEventException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This error is caught by the Lynx Engine. Please file an issue to Lynx to help address it." consumer:@[@(ELynxConsumerLynx)]];
		case ECLynxMTSRuntimeError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelUndecided fixSuggestion:@"" consumer:@[]];
		case ECLynxMTSRendererFunctionFatal:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelFatal fixSuggestion:@"" consumer:@[]];
		case ECLynxMTSRendererFunctionError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxThreadWrongThreadDestroyError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxThreadWrongThreadSyncFlushError:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxCSS:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelUndecided fixSuggestion:@"" consumer:@[]];
		case ECLynxCSSUnknownProperty:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelUndecided fixSuggestion:@"" consumer:@[]];
		case ECLynxCSSUnsupportedValue:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelUndecided fixSuggestion:@"Please check your value for the property follow the detailed message." consumer:@[]];
		case ECLynxCSSComputedCSSValueUnknownSetter:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Ignore it or raise an issue on github to let us know. This error is unexpected, which might be caused by internal pipeline fault" consumer:@[]];
		case ECLynxCSSComputedCSSValueUnknownGetter:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Ignore it or raise an issue on github to let us know. This error is unexpected, which might be caused by internal pipeline fault." consumer:@[]];
		case ECLynxCSSComputedCSSValueUnsupportedInheritance:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Remove property name from inheritance list." consumer:@[]];
		case ECLynxCSSParser:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please use values following the property definitions. You can get the definitions at the official website." consumer:@[]];
		case ECLynxSSRDecode:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check if the data used to render the page is the same data generated from the SSR server runtime. Or check if SSR is correctly implemented." consumer:@[]];
		case ECLynxSSRDecodeApiVersionNotSupported:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please limit the client version to the ones that support the SSR data sent from the server side." consumer:@[]];
		case ECLynxSSRDecodeScript:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Check the syntax of the script which is attached with SSR data." consumer:@[]];
		case ECLynxSSRLoadUninitialized:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxSSRHydrateDomDeviateFromSsrResult:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"The used app bundle and injected data to hydrate the SSR page should be the same as ones used to render on the server side" consumer:@[]];
		case ECLynxLazyBundleLoadBadResponse:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether the url of the lazy bundle is available" consumer:@[]];
		case ECLynxLazyBundleLoadEmptyFile:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether the lazy bundle file is empty" consumer:@[]];
		case ECLynxLazyBundleLoadDecodeFailed:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check whether the lazy bundle file is broken or it is compatible with the host page" consumer:@[]];
		case ECLynxLazyBundleLoadBadBundle:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check the error message of the bundle" consumer:@[]];
		case ECLynxWorkletMTSCallException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxWorkletRafCallException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Calling requestAnimationFrame failed. This is usually caused by an error in the callback function. Please ensure that the callback function executes without errors." consumer:@[]];
		case ECLynxWorkletModuleException:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Make sure you have imported worklet file correctly." consumer:@[]];
		case ECLynxMTSBridgeModuleWrongParam:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxComponentAPIDeprecated:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[@(ELynxConsumerFrontEnd)]];
		case ECLynxComponentListIllegalItemKey:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check the legality of the item-key." consumer:@[]];
		case ECLynxComponentListDuplicatedCell:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"We have encountered a system-level error. Please file an issue to Lynx to help resolve this problem." consumer:@[]];
		case ECLynxComponentListCellNotFound:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"We have encountered a system-level error. Please file an issue to Lynx to help resolve this problem." consumer:@[]];
		case ECLynxComponentListDynamicChangeOrientation:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please do not change the value of `vertical-orientation` dynamically." consumer:@[]];
		case ECLynxComponentListInvalidPropsArg:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"For parameter usage, please check documentation of list component." consumer:@[]];
		case ECLynxComponentListChildComponentNotExist:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"The internal state of the engine has become inconsistent.  Please file an issue to Lynx for help resolving this problem." consumer:@[]];
		case ECLynxComponentListUnsupportedThreadStrategy:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please set the attribute enable-async-list of <list /> to true." consumer:@[]];
		case ECLynxComponentListDuplicateItemKey:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"Please check the legality of the item-key." consumer:@[]];
		case ECLynxComponentImageUnsupportedProp:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This may be due to platform-specific limitations or system restrictions. If blur-radius is not supported on this platform, consider using CSS filter: blur() as an alternative." consumer:@[]];
		case ECLynxComponentCustom:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"" consumer:@[]];
		case ECLynxExceptionPlatform:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This error is caught by Lynx engine. Please file an issue to Lynx for help." consumer:@[]];
		case ECLynxExceptionJNI:
			return [[LynxSubErrorCodeMetaData alloc] initWithLevel:ELynxLevelError fixSuggestion:@"This error is caught by Lynx engine. Please file an issue to Lynx for help." consumer:@[]];
		default:
			return nil;
	};
}

+ (NSString*)levelToStr:(ELynxLevel)level {
	switch(level) {
		case ELynxLevelFatal:
			return @"fatal";
		case ELynxLevelError:
			return @"error";
		case ELynxLevelWarn:
			return @"warn";
		case ELynxLevelUndecided:
			return @"undecided";
		default:
			return @"unknown_level";
	}
}

+ (NSString*)consumerToStr:(ELynxConsumer)consumer {
	switch(consumer) {
		case ELynxConsumerFrontEnd:
			return @"front-end";
		case ELynxConsumerClient:
			return @"client";
		case ELynxConsumerLynx:
			return @"lynx";
		default:
			return @"unknown_consumer";
	}
}

@end


// clang-format on
// !!!!!! DO NOT MODIFY THIS FILE !!!!!!
// This file is auto-generated by error_code.yaml

